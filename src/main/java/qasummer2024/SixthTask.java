package qasummer2024;



/*
Задача 6
Ну и конечно же задача на блуждания коня по шахматной доске размера n х n. Чтобы блуждать не было скучно, на доске разбросаны специальные фишки.
Есть два типа фишек - "К" и "G". При ходе в клетку, в которой лежит фишка "К", фигура превращается в коня. При ходе в клетку, в которой лежит фишка "G", фигура превращается в короля.
Разумеется, после превращения фигура начинает ходить соответственно своему новому типу.
Попадание короля в клетку с фишкой "G" или коня в клетку с фишкой "К" ничего не меняет. При этом трансформация является обязательной и фигура не может пройти такую клетку с фишкой без превращения в указанный тип.
Ваша задача определить, за какое минимальное количество ходов фигура (возможно в образе коня/ короля) доберется до заданной клетки. Заметьте, что количество трансформаций считать не нужно.
Формат входных данных
В первой строке задано одно натуральное число п — размер доски (2 ≤ n ≤ 100). В следующих n клетках задано описание шахматной доски — по n символов. Фишки обозначаются "К" и "G", а пустые клетки за ".". Начальная клетка обозначается "S", а конечная — "F".
Гарантируется, что на начальной и конечной клетках нет фишки.
Формат выходных данных
Выведите единственное число — необходимое количество ходов. Если такого пути не существует, то выведите -1.
Замечание
Как и всегда, конь ходит буквой Г, т.е. на одну клетку в одну сторону и две клетки в другую, всего до 8 возможных ходов. Король может перейти из текущей клетки в соседнюю по стороне или углу, всего по 8 возможных ходов.

Примеры данных
Пример 1
Ввод
3
S..
F..
•••
Вывод
3
Пример 2
Ввод
2
SF
..
Вывод
-1
Пример 3
Ввод
4
S..K
..G.
.GK.
.K.F
Вывод
3
 */

import java.util.Scanner;

public class SixthTask {
    public static void main(String[] args) {
        Scanner number = new Scanner(System.in);
        byte n = number.nextByte();

    }
}
