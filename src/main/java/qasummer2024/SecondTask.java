package qasummer2024;



/*
Задача 2
В любом сколько-нибудь приличном редакторе изображений есть функция поворота изображения на 90 градусов. Что уж тут говорить, такая функция есть и в современных мессенджерах! Вот и вам предстоит реализовать эту функцию. Полноценный фоторедактор не потребуется, остановимся только на функции поворота изображения на 90 градусов.
Для простоты будем считать, что изображение представляет из себя матрицу из целых чисел. Вам дана матрица п х т. Необходимо вывести матрицу, которая будет являться поворотом исходной на 90 градусов по часовой стрелке.
Формат входных данных
Первая строка содержит два натуральных числа n и m (1 ≤ n, m ≤ 10^3). Следующие n строк содержат описание матрицы, по m целых неотрицательных чисел, не превосходящих 10^18.
Формат выходных данных
Выведите т строк по п элементов каждую - повернутую на 90 градусов матрицу.
Примеры данных:
Пример 1
Ввод
2 2
1 1
2 3
Вывод
2 1
3 1
Пример 2
Ввод
2 3
1 2 3
4 5 6
Вывод
4 1
5 2
6 3
Пример 3
Ввод
1 1
69
Вывод
69
 */

import java.util.Scanner;

public class SecondTask {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        if (n < 1 || n > Math.pow(10, 3) && m < 1 || m > Math.pow(10, 3)) {
            System.out.println("Не верный размер матрицы");
            return;
        }
        int[][] matrix = new int[n][m];

        // Считываем матрицу
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                matrix[i][j] = scanner.nextInt();
                if (matrix[i][j] < 0 || matrix[i][j] >  Math.pow(10, 18)) {
                    System.out.println("Элементы матрицы должны быть неотрицательными числами, и не превосходящими 10^18.");
                    return;
                }
            }
        }

        // Транспонирование матрицы
        int[][] transposedMatrix = new int[m][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                transposedMatrix[j][i] = matrix[i][j];
            }
        }

        // Поворот на 90 градусов путем замены элементов каждой строки
        for (int i = 0; i < m; i++) {
            for (int j = n - 1; j >= 0; j--) {
                System.out.print(transposedMatrix[i][j] + " ");
            }
            System.out.println();
        }
        scanner.close();
    }
}
