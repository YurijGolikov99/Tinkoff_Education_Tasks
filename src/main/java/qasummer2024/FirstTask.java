package qasummer2024;

/*
Задача 1
Олег — настоящий герой, чьи школьные будни наполнены заботами, уроками и оценками. Он изо всех сил старается, но, как и любой человек, он время от времени допускает ошибки и получает не самые лучшие оценки.
Сегодня Олег стоит перед особенным испытанием — ему предстоит показать своим родителям свои оценки. Родители попросили показать ему все его оценки за какие-то последовательные 7 дней.
Оценки представляют собой последовательность целых чисел от 2 до 5 включительно — по одной оценке на каждый день. Олег хочет выбрать такой непрерывный отрезок своих оценок, чтобы в этом отрезке не было оценок 2 и 3, а количество оценок 5 было максимальным.
Помогите Олегу найти этот особенный момент, когда его школьный свет преобладает над тьмой, и его оценки сияют наиболее ярко!

Формат входных данных
Первая строка содержит одно натуральное число n — количество оценок (1 ≤ n ≤ 10^5). Вторая строка содержит п целых чисел — по оценке т за каждый день ( 2 ≤ m ≤ 5).

Формат выходных данных
Выведите количество пятерок в выбранном Олегом отрезке, удовлетворяющем всем условиям. Если такого отрезка не существует, выведите -1

Примеры данных:
Пример 1
Ввод
9
5 5 4 5 4 5 4 5 4
Вывод
4
Пример 2
Ввод
8
3 4 4 4 4 5 4 5
Вывод
2
Пример 3
Ввод
10
5 5 5 5 5 3 5 5 5 5
Вывод
-1
 */

import java.util.Scanner;

public class FirstTask {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Чтение количества оценок
        int n = scanner.nextInt();

        // Проверка диапазона для n
        if (n < 1 || n > Math.pow(10, 5)) {
            System.out.println("Количество оценок должно быть в диапазоне от 1 до 10^5");
            return;
        }

        // Чтение оценок за каждый день
        int[] grades = new int[n];
        for (int i = 0; i < n; i++) {
            grades[i] = scanner.nextInt();
        }

        // Поиск особенного момента
        int maxFives = -1; // Максимальное количество пятерок
        int currentFives = 0; // Текущее количество пятерок в текущем отрезке
        int start = 0; // Индекс начала текущего отрезка

        for (int end = 0; end < n; end++) {
            // Если текущая оценка равна 2 или 3, сдвигаем начало отрезка
            if (grades[end] == 2 || grades[end] == 3) {
                start = end + 1;
                currentFives = 0; // Сбрасываем количество пятерок
            } else {
                // Увеличиваем количество пятерок
                if (grades[end] == 5) {
                    currentFives++;
                }

                // Если текущий отрезок больше 7 дней, сдвигаем начало отрезка
                if (end - start >= 6) {
                    // Если в текущем отрезке максимальное количество пятерок,
                    // обновляем значение maxFives
                    if (currentFives > maxFives) {
                        maxFives = currentFives;
                    }

                    // Сдвигаем начало отрезка
                    if (grades[start] == 5) {
                        currentFives--;
                    }
                    start++;
                }
            }
        }

        // Вывод результата
        if (maxFives == -1) {
            System.out.println(-1);
        } else {
            System.out.println(maxFives);
        }

        // Закрытие Scanner
        scanner.close();
    }
}
