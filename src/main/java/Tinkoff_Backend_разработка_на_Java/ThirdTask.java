package org.example.Backend_разработка_на_Java;

import java.util.Scanner;

/*
3 задание
В мобильное приложение, которое разрабатывает Николай, встроен автоматический детектор сбоев. Когда в приложении возникает ошибка, детектор автоматически отправляет сообщение об этом на сервер.
Впервые за долгое время Коля решил проверить статистику работы своего приложение. Статистика представляет из себя последовательность чисел  a1, a2, …,an, каждое из которых равно количеству сообщений об ошибках в соответствующий момент работы приложения.
Николай называет сбоем период работы приложения, когда количество ошибок сначала не убывало, а потом не возрастало. Например, период работы приложения с количеством ошибок [1,2,4,3,3] является сбоем, а [3,1,2]  нет.
Коля выбрал m  периодов работы приложения и узнал, являются ли эти периоды сбоями в приложении. А сможете ли узнать это вы?
Формат входных данных
В первой строке ввода дано целое число n  — количество моментов работы приложения, для которых записана статистика, (1≤n≤10^5).
Во второй строке дано n  целых чисел  a1, a2, …, an  — количество ошибок в соответствующий момент работы приложения (1≤ai≤10^9).
В третьей строке дано целое число m  — количество периодов, интересующих Колю (1≤m≤10^5).
В следующих m  строках дано описание периодов, интересующих Колю. Описание каждого периода состоит из двух целых чисел
xi и yi — номера первого и последнего моментов, входящих в период  (1≤xi≤y≤n).
Формат выходных данных
Выведите m  строк, каждая из которых соответствует периоду, интересующему Николая. В строке с номером i выведите «Yes» (без кавычек), если указанный период является сбоем, или «No» (без кавычек) иначе.
Примеры данных:
1)Пример
мы вводим
8
2 4 1 1 3 6 5 1
7
1 3
2 3
2 4
2 5
8 8
1 5
5 8
выводим:
Yes
Yes
Yes
No
Yes
No
Yes
 */

public class ThirdTask {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        int[] errors = new int[n];

        for (int i = 0; i < n; i++) {
            errors[i] = scanner.nextInt();
        }

        int m = scanner.nextInt();

        for (int i = 0; i < m; i++) {
            int xi = scanner.nextInt() - 1; // Индексы начинаются с 0, а не с 1
            int yi = scanner.nextInt() - 1; // Индексы начинаются с 0, а не с 1

            if (isFailure(errors, xi, yi)) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
    }

    // Функция для определения, является ли период сбоем
    private static boolean isFailure(int[] errors, int start, int end) {
        if (start >= end) {
            return true; // Период с одним элементом считается сбоем
        }

        // Проверяем, что количество ошибок в начале не убывает
        int i = start;
        while (i < end && errors[i] <= errors[i + 1]) {
            i++;
        }

        // Проверяем, что количество ошибок после начала периода не возрастает
        while (i < end && errors[i] >= errors[i + 1]) {
            i++;
        }

        // Если i достигло конца периода, то это сбой
        return i == end;
    }
}