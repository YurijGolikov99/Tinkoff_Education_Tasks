package org.example.Backend_разработка_на_Java;
import java.util.Arrays;
import java.util.Scanner;

/*
4 задание
В компании, где работает Иван, активно применяют различные средства для контроля качества кода.
Перед тем, как использовать написанную программу, ее код проверяют при помощи n проверок. В качестве результата каждой из проверок дается некоторое целое число — опасность кода. Назовем общей опасностью кода произведение опасностей для каждой из проверок.
Ваня только что дописал свою программу и запустил все проверки. В результате проверок, он получил массив опасностей
a1, a2, …, an.
Иван хочет минимизировать общую опасность написанного кода, для этого он готов не более  c  раз внести изменения в свой код. За одно внесение изменений он может увеличить или уменьшить на  d  результат одной из проверок, результат остальных проверок при этом не поменяется.
Помогите Ивану и предложите значения результатов проверок, дающие минимальную общую опасность, которые он может получить, сделав не более  c  изменений.
Формат входных данных
В первой строке ввода дано три целых числа  n, c и d  — количество проверок, максимальное количество изменений, которое готов внести Иван, и число d (1≤n≤200000;1≤c≤200000;1≤d≤10^9).
Во второй строке ввода дано  n  целых чисел  a1, a2, …, an — результаты проверок кода Ивана до всех изменений (−10^9≤ai≤10^9).
Формат выходных данных
В единственной строке выведите  n  значений результатов проверок кода после применения не более чем  c  исправлений. Произведение всех результатов проверок должно быть минимальным.
Если ответов несколько, вы можете вывести любой.
Примеры данных:
1)Пример
мы вводим
5 3 1
5 4 3 5 2
мы выводим:
5 4 3 5 -1
2)Пример
мы вводим
5 3 1
5 4 3 5 5
мы выводим
5 4 0 5 5
3)Пример
мы вводим
5 3 1
5 4 4 5 5
выводим:
5 1 4 5 5
4)Пример
мы вводим
3 2 7
5 4 2
выводим
5 11 -5
 */

public class ForthTask {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt(); // Количество проверок
        int c = scanner.nextInt(); // Максимальное количество изменений
        int d = scanner.nextInt(); // Изменение

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }

        // Сначала сортируем массив результатов проверок
        Arrays.sort(a);

        // Идем по массиву результатов и применяем изменения, чтобы минимизировать произведение опасностей
        for (int i = 0; i < c && a[i] < 0; i++) {
            a[i] += d;
        }

        // Выводим результат
        for (int i = 0; i < n; i++) {
            System.out.print(a[i] + " ");
        }
    }
}