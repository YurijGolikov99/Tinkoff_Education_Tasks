package algorithmsanddatastructure2024;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

/*
Иван очень любит читать. Раз в месяц он приходит в библиотеку и берет много книг, чтобы прочитать их за следующий месяц.
Чтобы не забыть никакую книгу, Ваня ведет список номеров книг, которые он хотел бы прочитать.
Этот список пополняется достаточно хаотично, поэтому номера книг в этом списке могут повторяться.
Перед очередным походом в библиотеку Иван открыл список и увидел в нем n записей. Ваня боится, что в библиотеке его не примут с таким списком. Поэтому он хочет получить отсортированный по номерам список минимальной длины, содержащий, возможно в неявном виде, в точности только желаемые книги.
Для достижения этой цели Иван может использовать следующее сокращение: если он хочет взять книги с номерами х, х + 1,..., у - 1, у, то он может записать в список всего 3 записи: х, ... , У, что будет означить, что ему нужны книги с х по у.
Помогите Ване получить желаемый список.

Формат входных данных
В первой строке входного файла дано одно целое число п — число записей в исходном списке книг (1 ≤ n ≤ 2 • 10^5).
Во второй строке дано п чисел а — элементы исходного списка книг (1 ≤ ai ≤ 10^9).

Формат выходных данных
Выведите список книг с минимальным числом элементов такой, что в нем будут в точности все желаемые книги. Если существует несколько списков с минимальным числом элементов, выведите список с наименьшим числом номеров книг, указанных явно.

Система оценки
Баллы за каждую подзадачу начисляются только в случае, если все тесты этой подзадачи и необходимых подзадач успешно пройдены.

Замечание
В третьем тесте из условия список «1 3 ...5 9 ...11» является ответом, так как содержит минимальное число номеров книг, тогда как «1 3 ...5 9 10 11» ответом не является.

Примеры данных
Пример 1
Ввод
7
1 3 4 5 7 8 12
Вывод
1 3 & ... 5 7 8 12

Пример 2
Ввод
6
30 30 20 11 12 1
Примеп 2
Вывод
1 11 12 20 30

Пример 3
Ввод
8
9 11 10 1 3 5 4 4
Вывод
1 3 ... 5 9 .. 11
 */
public class ForthTaskBookList {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Чтение количества записей в списке
        int n = scanner.nextInt();

        // Чтение элементов исходного списка книг
        List<Integer> books = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            books.add(scanner.nextInt());
        }

        // Сортировка списка книг
        Collections.sort(books);

        // Создание и вывод списка с минимальным числом элементов
        List<Integer> result = new ArrayList<>();
        int start = books.get(0);
        int end = books.get(0);

        for (int i = 1; i < n; i++) {
            if (books.get(i) == end + 1) {
                end = books.get(i);
            } else {
                result.add(start);
                if (start != end) {
                    result.add(end);
                }
                start = books.get(i);
                end = books.get(i);
            }
        }

        result.add(start);
        if (start != end) {
            result.add(end);
        }

        // Вывод результата
        System.out.println(result.size());
        for (int i = 0; i < result.size(); i++) {
            System.out.print(result.get(i));
            if (i < result.size() - 1) {
                System.out.print(" ");
            }
        }
    }
}
