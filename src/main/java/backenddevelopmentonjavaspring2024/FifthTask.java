package backenddevelopmentonjavaspring2024;

/*
Единорог Тимофей отправился в путешествие по волшебному лабиринту.
Лабиринт состоит из п комнат, которые соединены переходами так, что между двумя любыми комнатами единственный путь.
Тимофей боится заблудиться в лабиринте, поэтому написал программу, которая помогает выбрать правильное направление при движении по лабиринту. Программа по номеру комнаты, в которой сейчас находится Тимофей, и комнате, в которую он хочет попасть, находит номер комнаты, в которую нужно перейти из той комнаты, в которой он находится, чтобы за минимальное число переходов добраться до той комнаты, в которую он хочет попасть.
Единорог потратил на написание программы 30 минут, а сможете ли вы написать такую же быстрее?

Формат входных данных
В первой строке входных данных дано одно целое число n — число комнат в лабиринте (2 <= n <=2x10^5).
Далее дано n — 1 строк, в которых описаны переходы в лабиринте. Описание каждого перехода состоит из двух целых чисел — номеров узлов, которые он соединяет v_i и V_i (1 <= U_i, V_i <= U_i, U_i не равно V_i). Гарантируется, что между двумя любыми комнатами существует единственный путь.
В следующей строке дано одно целое число q - число вопросов о направлении, которые интересуют Тимофея (1 <= q <= 2x10^5).
В следующих у строках даны пары чисел from_i;, to_i - номера комнат, про направление движения между которыми хочет узнать Тимофей (1 <= from_i, to_i <= n; from_i неравен to_i).

Формат выходных данных
Для каждого вопроса выведите номер комнаты, в которую нужно перейти из комнаты from_i, чтобы попасть в комнату to_i; за минимальное число переходов.

Примеры данных
Пример 1
Ввод
4
1 2
1 3
3 4
5
1 2
1 3
2 3
4 1
4 2
Вывод
2
3
1
3
3

Пример 2
Ввод
5
1 2
1 3
1 4
4 5
4
1 4
2 5
4 3
5 2
Вывод
4
1
1
4



 */
public class FifthTask {
    public static void main(String[] args) {

    }
}